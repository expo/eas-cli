on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release workflow

jobs:
  release:
    name: Create a release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          draft: true
  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: yarn install --frozen-lockfile --check-files
      - run: yarn build
      - name: Build tarballs
        working-directory: ${{ github.workspace }}/packages/eas-cli
        run: yarn oclif-dev pack --targets linux-x64,linux-arm
      - name: Upload linux-x64 tarball
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: packages/eas-cli/dist/eas-linux-x64.tar.gz
          asset_name: eas-linux-x64.tar.gz
          asset_content_type: application/gzip
      - name: Upload linux-arm tarball
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: packages/eas-cli/dist/eas-linux-arm.tar.gz
          asset_name: eas-linux-arm.tar.gz
          asset_content_type: application/gzip
  build-mac:
    name: Build for macOS
    # Use macOS to get the correct platform specific dependencies
    runs-on: macos-latest
    needs: release
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: yarn install --frozen-lockfile --check-files
      - run: yarn build
      - name: Build tarballs
        working-directory: ${{ github.workspace }}/packages/eas-cli
        run: yarn oclif-dev pack --targets darwin-x64
      - name: Upload darwin-x64 tarball
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: packages/eas-cli/dist/eas-darwin-x64.tar.gz
          asset_name: eas-darwin-x64.tar.gz
          asset_content_type: application/gzip
  build-windows:
    name: Build for Windows
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: yarn install --frozen-lockfile --check-files
      - run: sudo apt-get install nsis
      - run: yarn build
      - run: yarn oclif-dev pack:win
        working-directory: ${{ github.workspace }}/packages/eas-cli
      - id: x64
        run: echo "::set-output name=filename::$(ls eas-*-x64.exe)"
        working-directory: ${{ github.workspace }}/packages/eas-cli/dist/win
      - id: x86
        run: echo "::set-output name=filename::$(ls eas-*-x86.exe)"
        working-directory: ${{ github.workspace }}/packages/eas-cli/dist/win
      - name: Upload x64 installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: packages/eas-cli/dist/win/${{ steps.x64.outputs.filename }}
          asset_name: ${{ steps.x64.outputs.filename }}
          asset_content_type: application/gzip
      - name: Upload x86 installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: packages/eas-cli/dist/win/${{ steps.x86.outputs.filename }}
          asset_name: ${{ steps.x86.outputs.filename }}
          asset_content_type: application/gzip
  publish-to-npm:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: [build-linux, build-mac, build-windows]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          registry-url: 'https://registry.npmjs.org/'
          scope: 'expo'
          node-version: '16'
      - name: Install dependencies
        run: yarn install --frozen-lockfile --check-files
      - name: Build
        run: yarn build
      - name: Publish packages to npm
        run: yarn lerna publish from-package --yes --no-verify-access
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
  release-changelog:
    name: Update changelog and publish release
    runs-on: ubuntu-latest
    needs: publish-to-npm
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install dependencies
        working-directory: ./scripts
        run: yarn install --frozen-lockfile --check-files
      - name: Resolve version
        run: echo "EAS_CLI_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      - name: Update changelog
        working-directory: ./scripts
        run: yarn --silent release-changelog $EAS_CLI_VERSION > /tmp/current-changelog
      - name: Publish release
        run: hub release edit v$EAS_CLI_VERSION --draft=false -F /tmp/current-changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Commit and push
        run: |
          git fetch
          git checkout main
          git config --global user.email "support+ci@expo.io"
          git config --global user.name "Expo CI"
          git add CHANGELOG.md
          git commit -m "update CHANGELOG.md"
          git push
      - name: Prepare changelog for Slack
        run: |
          tail -n +3 /tmp/current-changelog > /tmp/changelog.md
          npx slackmd /tmp/changelog.md
          echo 'SLACK_CHANGELOG<<EOF' >> $GITHUB_ENV
          cat /tmp/changelog.slack.md >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: eas-cli
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/expo-ci.png?size=48
          SLACK_TITLE: 'Released eas-cli@${{ env.EAS_CLI_VERSION }}'
          SLACK_MESSAGE: ${{ env.SLACK_CHANGELOG }}
          SLACK_USERNAME: 'Expo CI'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_FOOTER: ''
